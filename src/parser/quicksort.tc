let putc = fun c:Char => {
        return 0;
};

let swap = fun @x @y:Int =>{
    let t = x;
       @x = y;
       @y = t;
    return 0;
};


let sort = fun arr:&Int l r =>{
    if(l>=r) return 0;

    let @i = l;
    let @j = r;
    let p = arr[l];

    while(i<j)
    {
        while(i<j)
        {
            if(arr[j]>=p) j = j - 1;
            else break;
        }
        arr[i] = arr[j];

        while(i<j)
        {
            if(arr[i]<=p) i = i + 1;
            else break;
        }
        arr[j] = arr[i];
    }
    arr[i] = p;
    let _ = $(arr, l, i-1);
    let _ = $(arr, j+1, r);
    return 0;
};

let main = fun =>{
    let n    = geti();
    let arr  = 0 ** 10000;
    let @i   = 0;
    let @ptr = arr&[0];
    while(i<n)
    {
        *ptr = geti();
        ptr  = ptr + 1;
        i    = i   + 1;
    }
    let _ = sort(arr&[0], 0, n-1);
    i=0;
    ptr=arr&[0];

    while(i<n)
    {
        let _ = puti(ptr[0]);
        let _ = putc('\n');  
        ptr = ptr + 1;
        i   = i + 1;
    }
    return 0;
};

let _ = main();