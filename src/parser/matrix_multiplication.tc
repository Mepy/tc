let pretty_puti = \ m:Int =>{
    let @n = m;
    let @l = 0;
    if(n < 0)
    {
        n = 0 - n;
        l = l + 1;
    }
    while(n>0)
    {
        n = n / 10;
        l = l + 1;
    }
    while(l<10)
    {
        putc(' ');
        l = l + 1;
    }
    puti(m);
    return 0;
};

let matrix_put = \ mat:&Int => {
    let @i = 0;
    let @j = 0;
    let m = mat[1000];
    let n = mat[1001];
    while(i<m)
    {
        j = 0;
        while(j<n)
        {   

            pretty_puti(mat[n*i+j]);
            j = j + 1;
        }
        putc('\n');
        i = i + 1;
    }
    return 0;
};


let matrix_get = \ mat:&Int => {
    let m = geti();
    let n = geti();
    mat[1000] = m;
    mat[1001] = n;
    
    let @i = 0;
    let @j = 0;
    while(i<m)
    {
        j = 0;
        while(j<n)
        {   
            mat[n*i+j] = geti();
            j = j + 1;
        }
        i = i + 1;
    }
    return mat;
};


let matrix_multible = \ a:&Int b:&Int =>{
    let n_a = a[1001];
    let m_b = b[1000];
    return n_a == m_b;
};


let matrix_mult = \ a:&Int b: &Int c:&Int => {
    let m_a = a[1000];
    let n_a = a[1001];
    let m_b = b[1000];
    let n_b = b[1001];

    let m_c = m_a;
    let n_c = n_b;
    c[1000] = m_c;
    c[1001] = n_c;
    
    let @i = 0;
    let @j = 0;
    let @k = 0;
    let @s = 0;
    while(i < m_c)
    {
        j = 0;
        while(j < n_c)
        {
            k = 0;
            s = 0;            
            while(k < n_a)
            {
                s = s + a[n_a*i+k] * b[n_b*k+j];
                k = k + 1;
            }
            
            c[n_c*i+j] = s;
            j = j + 1;
        }
        i = i + 1;
    }
    return 0;
};


let main = \ =>
{   
    let mat_a = 0 ** 2000;
    let mat_b = 0 ** 2000;
    let mat_c = 0 ** 2000;

    matrix_get(mat_a);
    matrix_get(mat_b);

    if(matrix_multible(mat_a, mat_b))
    {
        matrix_mult(mat_a, mat_b, mat_c);
        matrix_put(mat_c);
    }
    else {
        puts("Incompatible Dimensions");
    }

    
    return 0;
};

main();